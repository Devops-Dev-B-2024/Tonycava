name: TP Docker

on: [ push, pull_request ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lint
        uses: actions/setup-node@v2

      - name: Run linting backend
        run: |
          cd TP1-Docker/ && git checkout $GITHUB_REF_NAME
          echo "Lint"

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          context: ./TP1-Docker
          tags: myimage:latest
          file: TP1-Docker/Dockerfile.app
          outputs: type=docker,dest=/tmp/myimage.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: myimage
          path: /tmp/myimage.tar



  push:
    name: Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: myimage
          path: /tmp
      - name: Load image
        run: docker load --input /tmp/myimage.tar

      - name: Log into Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get short commit SHA
        id: commit_sha
        run: echo "::set-output name=sha_short::${GITHUB_SHA::5}"

      - name: Push Docker image
        run: |
          docker tag myimage:latest tonycava/tp-docker-app:${{ steps.commit_sha.outputs.sha_short }}
          docker push tonycava/tp-docker-app:${{ steps.commit_sha.outputs.sha_short }}

  integration-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: app
          POSTGRES_DB: app
        ports:
          - 11000:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DATABASE_URL: postgres://app:app@localhost:11000/app
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v1
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: cd TP1-Docker/ && yarn install

      - name: Run integration tests
        run: cd TP1-Docker/ && yarn test